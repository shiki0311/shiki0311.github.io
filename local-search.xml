<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/07/31/hello-world/"/>
    <url>/2025/07/31/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【RM】电控代码规范</title>
    <link href="/2025/07/30/%E3%80%90RM%E3%80%91%E7%94%B5%E6%8E%A7%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    <url>/2025/07/30/%E3%80%90RM%E3%80%91%E7%94%B5%E6%8E%A7%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h1 id="【RM】起源电控代码规范"><a href="#【RM】起源电控代码规范" class="headerlink" title="【RM】起源电控代码规范"></a>【RM】起源电控代码规范</h1><h6 id="V1-0-CREATED-BY"><a href="#V1-0-CREATED-BY" class="headerlink" title="V1.0 CREATED BY @"></a>V1.0 CREATED BY @</h6><blockquote><p>本文为2025赛季起源Origin战队电控代码规范V1.0，尚未完善，如有错误，望评论区指正。</p></blockquote><h3 id="格式化约定"><a href="#格式化约定" class="headerlink" title="格式化约定"></a>格式化约定</h3><blockquote><p>参考：<a href="https://sjtu-robomaster-team.github.io/cpp-style-guide/">https://sjtu-robomaster-team.github.io/cpp-style-guide/</a></p></blockquote><h4 id="缩进和行宽"><a href="#缩进和行宽" class="headerlink" title="缩进和行宽"></a>缩进和行宽</h4><ul><li>使用空格，而不是 Tab。</li><li>每级缩进使用 4 个空格（也就是说在纯字符串和注释之外的缩进都是 4 的倍数）。</li><li>行宽最大为 100。</li></ul><h4 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h4><p>不同的语句之间要么不空行，要么空一行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">void</span> <span class="hljs-title function_">foo</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> x = ...;<span class="hljs-comment">//空一行</span><br><br>    <span class="hljs-type">int</span> y = ...;<br>    <span class="hljs-type">int</span> z = ...;<br>&#125;<span class="hljs-comment">//空一行</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">bar</span><span class="hljs-params">()</span> &#123;&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">baz</span><span class="hljs-params">()</span> &#123;&#125;<br></code></pre></td></tr></table></figure><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>**以下关于注释的规范只是建议。**格式化工具可以跳过对注释的格式化。</p><ul><li>行注释（<code>//</code>）相较于块注释（<code>/* ... */</code>）更好。</li><li>当使用行注释时，开头标记后应该有一个空格。</li><li>使用行内块注释时，开符号后和闭符号前均有一个空格。多行块注释，开符号后和闭符号前均有一个新行。</li><li>行尾注释比其他注释更好。行尾注释之前带有 1 个空格。</li><li>应该把块注释当作关键字一样处理其周围的空格。</li><li>尾随注释和多行注释任意一行的末尾不应有尾随空格。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">// 条目上方的注释</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Foo</span> &#123; ... &#125;;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">foo</span><span class="hljs-params">()</span> </span>&#123;&#125; <span class="hljs-comment">// 条目尾随注释</span><br><br><span class="hljs-keyword">namespace</span> &#123;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">foo</span><span class="hljs-params">(<span class="hljs-comment">/* 参数前的注释 */</span> T x)</span> </span>&#123;...&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>注释应是完整的句子，行内块注释则不用。</li><li>纯注释行的注释宽度不大于 80，且算上缩进总宽度不超过 100。</li></ul><hr><ul><li><p>代码原则</p><ul><li>代码分层（示例）</li></ul></li><li><p>头文件</p><ul><li>很多</li></ul></li><li><p>函数</p></li><li><p>变量、宏、常量</p></li><li><p>表达式</p></li><li><p>命名（RM习惯）</p><ul><li>很多</li></ul></li><li><p>注释与格式化</p><ul><li>文件</li><li>函数</li><li>排版</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>RoboMaster</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RoboMaster</tag>
      
      <tag>文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
